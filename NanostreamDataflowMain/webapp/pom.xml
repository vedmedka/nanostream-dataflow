<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <!-- REQUIRED : your application must be packed as a .war to deploy on App Engine Standard -->
  <packaging>war</packaging>

  <groupId>com.google.allenday.nanostream</groupId>
  <artifactId>launcher</artifactId>
  <version>1.0-SNAPSHOT</version>


  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <spring.boot.version>2.2.1.RELEASE</spring.boot.version> <!-- DO NOT UPDATE w/o MANUAL TESTING -->
    <!-- REQUIRED by appengine-maven-plugin plugin, if web.xml does not exist for your application -->
    <failOnMissingWebXml>false</failOnMissingWebXml>

  </properties>

  <dependencies>
    <!-- Compile/runtime dependencies -->
    <!--<dependency>-->
      <!--<groupId>com.google.cloud</groupId>-->
      <!--<artifactId>google-cloud-storage</artifactId>-->
      <!--<version>1.93.0</version>-->
    <!--</dependency>-->
    <dependency>
      <groupId>com.google.api-client</groupId>
      <artifactId>google-api-client</artifactId>
      <version>1.30.7</version>
    </dependency>

    <dependency>
      <groupId>com.google.apis</groupId>
      <artifactId>google-api-services-dataflow</artifactId>
      <version>v1b3-rev298-1.25.0</version>
    </dependency>

    <dependency>
      <groupId>com.google.auth</groupId>
      <artifactId>google-auth-library-oauth2-http</artifactId>
      <version>0.19.0</version>
    </dependency>

    <dependency>
      <groupId>org.json</groupId>
      <artifactId>json</artifactId>
      <version>20180813</version>
    </dependency>

    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
      <version>${spring.boot.version}</version>
      <!-- Exclude Tomcat so that it doesn't conflict w/ Jetty server -->
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-tomcat</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- Exclude any jul-to-slf4j -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <!-- App Engine SDK dependency : only required if you need to explicitly use App Engine API -->
    <dependency>
      <groupId>com.google.appengine</groupId>
      <artifactId>appengine-api-1.0-sdk</artifactId>
      <version>1.9.77</version>
    </dependency>

    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-monitoring</artifactId>
      <version>1.99.0</version>
    </dependency>

    <!-- Include Servlet API -->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
      <type>jar</type>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>2.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.google.cloud</groupId>
      <artifactId>google-cloud-spanner</artifactId>
    </dependency>

    <!-- Test Dependencies -->
    <!--<dependency>-->
      <!--<groupId>com.google.appengine</groupId>-->
      <!--<artifactId>appengine-testing</artifactId>-->
      <!--<version>1.9.77</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>com.google.appengine</groupId>-->
      <!--<artifactId>appengine-api-stubs</artifactId>-->
      <!--<version>1.9.76</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>com.google.appengine</groupId>-->
      <!--<artifactId>appengine-tools-sdk</artifactId>-->
      <!--<version>1.9.76</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->

    <!--<dependency>-->
      <!--<groupId>com.google.truth</groupId>-->
      <!--<artifactId>truth</artifactId>-->
      <!--<version>0.42</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>junit</groupId>-->
      <!--<artifactId>junit</artifactId>-->
      <!--<version>4.13-beta-1</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    <!--<dependency>-->
      <!--<groupId>org.mockito</groupId>-->
      <!--<artifactId>mockito-core</artifactId>-->
      <!--<version>2.23.4</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->

    <!--<dependency>-->
      <!--<groupId>org.springframework.boot</groupId>-->
      <!--<artifactId>spring-boot-starter-test</artifactId>-->
      <!--<version>${spring.boot.version}</version>-->
      <!--<scope>test</scope>-->
    <!--</dependency>-->
    
  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <!-- Import dependency management from Spring Boot -->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.google.cloud</groupId>
        <artifactId>google-cloud-bom</artifactId>
        <version>0.120.2-alpha</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  
  <build>
    <!-- for hot reload of the web application-->
    <outputDirectory>${project.build.directory}/${project.build.finalName}/WEB-INF/classes</outputDirectory>
    <plugins>
      <plugin>
        <groupId>com.google.cloud.tools</groupId>
        <artifactId>appengine-maven-plugin</artifactId>
        <version>2.2.0</version>
        <configuration>
          <projectId>GCLOUD_CONFIG</projectId>
          <version>GCLOUD_CONFIG</version>
          <jvmFlags>
            <jvmFlag>-Xdebug</jvmFlag>
            <jvmFlag>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005</jvmFlag>
          </jvmFlags>
        </configuration>
      </plugin>
      
      <plugin>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>1.8.0</version>
        <configuration>
          <workingDirectory>src/main/app-vue-js</workingDirectory>
          <installDirectory>target</installDirectory>
        </configuration>
        <executions>
          <execution>
            <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
            <id>install node and npm</id>
            <goals>
              <goal>install-node-and-npm</goal>
            </goals>
            <configuration>
              <nodeVersion>v10.17.0</nodeVersion>
            </configuration>
          </execution>
          <execution>
            <id>npm install</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>install</arguments>
            </configuration>
          </execution>
<!--          <execution>-->
<!--            <id>npm audit fix</id>-->
<!--            <goals>-->
<!--              <goal>npm</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <arguments>audit</arguments>-->
<!--            </configuration>-->
<!--          </execution>-->
          <execution>
            <id>npm build</id>
            <goals>
              <goal>npm</goal>
            </goals>
            <configuration>
              <arguments>run-script build</arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
